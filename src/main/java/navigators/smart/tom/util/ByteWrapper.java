/* * Copyright (c) 2007-2013 Alysson Bessani, Eduardo Alchieri, Paulo Sousa,  * and the authors indicated in the @author tags  *   * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */package navigators.smart.tom.util;import java.util.Arrays;/** * This class represents a byte array in form of a proper object with equality * for equal byte arrays and not only for the same object. *  * @author Christian Spann  */public class ByteWrapper {		public final byte[] value;		public ByteWrapper(byte[] value){		this.value = value;	}	@Override	public boolean equals(Object obj) {		if (obj == null) {			return false;		}		if (getClass() != obj.getClass()) {			return false;		}		final ByteWrapper other = (ByteWrapper) obj;		if (!Arrays.equals(this.value, other.value)) {			return false;		}		return true;	}	@Override	public int hashCode() {		int hash = 3;		hash = 53 * hash + Arrays.hashCode(this.value);		return hash;	}	@Override	public String toString(){		return Arrays.toString(value);	}	}