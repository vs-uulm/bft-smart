############################################
####### Communication Configurations #######
############################################

#false: use Java NIO (recommended); true: use Thread Pool
system.channels.blocking = false  

#Authenticate the channels (Unused currently?)
system.authentication = false

#HMAC algorithm used to authenticate messages between processes (HmacMD5 is the default value)
#system.authentication.hmacAlgorithm = HmacSHA1

#Diffie-Hellmam key exchange parameters 
#system.authentication.P = 
#system.authentication.G =

#Configures the server-to-server verification to be used: None, PTPVerifier or
#GlobalVerifier (Values are case sensitive)
system.communication.verifiertype=GlobalVerifier

system.communication.useSenderThread = true

system.globalverifier.factoryclass = navigators.smart.ebawa.communication.USIGFactory

#Choose the verification method: HMacVerificatierFactory is the default (as HmacMD5 is default)
system.ptpverifier.factoryclass = navigators.smart.communication.server.HMacVerifierFactory


############################################
### Replication Algorithm Configurations ###
############################################

#Number of servers in the group 
system.servers.num = 4

#Maximum number of faulty replicas 
system.servers.f = 1

#consensus service factory class
consensus.factoryclass = navigators.smart.paxosatwar.PaxosAtWarServiceFactory

#
#Paxos Configurations
# 

#Round timeout 
system.paxos.freeze.timeout = 6000000

#Use decide messages for two step decisions 
system.paxos.decideMessages = false  

#Delay strong messages to avoid lagging and congestion of network
system.paxos.strongdelay = 0

#
#TOM Configuration
#  

#Timeout to asking for a client request
system.totalordermulticast.timeout = 12000000

#Maximum ahead-of-time message not discarded
system.totalordermulticast.highMark = 1000

#Maximum ahead-of-time message not discarded when the replica is still on EID 0
system.totalordermulticast.revival_highMark = 10

#Minimum period between executions of the paxos algorithm
system.totalordermulticast.period = 1  

#Activate the state transfer protocol ('true' to activate, 'false' to de-activate)
system.totalordermulticast.state_transfer = true

#Period at which SMaRt requests the state to the application (for the state transfer state protocol)
system.totalordermulticast.checkpoint_period = 50

#Maximum batch size (in number of messages)
system.totalordermulticast.maxbatchsize = 400  

#Number of nonces (for non-determinism actions) generated
system.totalordermulticast.nonces = 0  

#period after which the reqId provided by a client is not 
#verified. Use a large value to avoid replay attacks (but
#let it as 0 to develop and debug applications)
system.totalordermulticast.replayVerificationTime = 10000

#if verification of leader-generated timestamps are increasing 
#it can only be used on systems in which the network clocks
#are synchronized 
system.totalordermulticast.verifyTimestamps = false

#Quantity of messages that can be stored in the receive queue of the comunication system
system.communication.inQueueSize = 10000

# Quantity of messages that can ve stored in the send queue of each replica
system.communication.outQueueSize = 1000

#Set to 1 if SMaRt should use signatures, set to 0 if otherwise
system.communication.useSignatures = 0

#Set to 1 if SMaRt should use the standard output to display debug messages, set to 0 if otherwise
system.debug = 0

### Simulation parameters

#Adds a delay to the sending of packets between the replicas to simulate wan
#conditions. If set to 0 there will be no delay. Works only when useSenderThread
#is enabled.
system.testing.sendDelay = 0